package com.seray.pork.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.seray.entity.Config;
import com.seray.entity.Library;
import com.seray.entity.OperationLog;
import com.seray.entity.OrderDetail;
import com.seray.entity.Products;
import com.seray.entity.ProductsCategory;
import com.seray.entity.PurchaseDetail;
import com.seray.entity.PurchaseSubtotal;
import com.seray.entity.Supplier;

import com.seray.pork.dao.ConfigDao;
import com.seray.pork.dao.LibraryDao;
import com.seray.pork.dao.OperationLogDao;
import com.seray.pork.dao.OrderDetailDao;
import com.seray.pork.dao.ProductsDao;
import com.seray.pork.dao.ProductsCategoryDao;
import com.seray.pork.dao.PurchaseDetailDao;
import com.seray.pork.dao.PurchaseSubtotalDao;
import com.seray.pork.dao.SupplierDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig configDaoConfig;
    private final DaoConfig libraryDaoConfig;
    private final DaoConfig operationLogDaoConfig;
    private final DaoConfig orderDetailDaoConfig;
    private final DaoConfig productsDaoConfig;
    private final DaoConfig productsCategoryDaoConfig;
    private final DaoConfig purchaseDetailDaoConfig;
    private final DaoConfig purchaseSubtotalDaoConfig;
    private final DaoConfig supplierDaoConfig;

    private final ConfigDao configDao;
    private final LibraryDao libraryDao;
    private final OperationLogDao operationLogDao;
    private final OrderDetailDao orderDetailDao;
    private final ProductsDao productsDao;
    private final ProductsCategoryDao productsCategoryDao;
    private final PurchaseDetailDao purchaseDetailDao;
    private final PurchaseSubtotalDao purchaseSubtotalDao;
    private final SupplierDao supplierDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        libraryDaoConfig = daoConfigMap.get(LibraryDao.class).clone();
        libraryDaoConfig.initIdentityScope(type);

        operationLogDaoConfig = daoConfigMap.get(OperationLogDao.class).clone();
        operationLogDaoConfig.initIdentityScope(type);

        orderDetailDaoConfig = daoConfigMap.get(OrderDetailDao.class).clone();
        orderDetailDaoConfig.initIdentityScope(type);

        productsDaoConfig = daoConfigMap.get(ProductsDao.class).clone();
        productsDaoConfig.initIdentityScope(type);

        productsCategoryDaoConfig = daoConfigMap.get(ProductsCategoryDao.class).clone();
        productsCategoryDaoConfig.initIdentityScope(type);

        purchaseDetailDaoConfig = daoConfigMap.get(PurchaseDetailDao.class).clone();
        purchaseDetailDaoConfig.initIdentityScope(type);

        purchaseSubtotalDaoConfig = daoConfigMap.get(PurchaseSubtotalDao.class).clone();
        purchaseSubtotalDaoConfig.initIdentityScope(type);

        supplierDaoConfig = daoConfigMap.get(SupplierDao.class).clone();
        supplierDaoConfig.initIdentityScope(type);

        configDao = new ConfigDao(configDaoConfig, this);
        libraryDao = new LibraryDao(libraryDaoConfig, this);
        operationLogDao = new OperationLogDao(operationLogDaoConfig, this);
        orderDetailDao = new OrderDetailDao(orderDetailDaoConfig, this);
        productsDao = new ProductsDao(productsDaoConfig, this);
        productsCategoryDao = new ProductsCategoryDao(productsCategoryDaoConfig, this);
        purchaseDetailDao = new PurchaseDetailDao(purchaseDetailDaoConfig, this);
        purchaseSubtotalDao = new PurchaseSubtotalDao(purchaseSubtotalDaoConfig, this);
        supplierDao = new SupplierDao(supplierDaoConfig, this);

        registerDao(Config.class, configDao);
        registerDao(Library.class, libraryDao);
        registerDao(OperationLog.class, operationLogDao);
        registerDao(OrderDetail.class, orderDetailDao);
        registerDao(Products.class, productsDao);
        registerDao(ProductsCategory.class, productsCategoryDao);
        registerDao(PurchaseDetail.class, purchaseDetailDao);
        registerDao(PurchaseSubtotal.class, purchaseSubtotalDao);
        registerDao(Supplier.class, supplierDao);
    }
    
    public void clear() {
        configDaoConfig.clearIdentityScope();
        libraryDaoConfig.clearIdentityScope();
        operationLogDaoConfig.clearIdentityScope();
        orderDetailDaoConfig.clearIdentityScope();
        productsDaoConfig.clearIdentityScope();
        productsCategoryDaoConfig.clearIdentityScope();
        purchaseDetailDaoConfig.clearIdentityScope();
        purchaseSubtotalDaoConfig.clearIdentityScope();
        supplierDaoConfig.clearIdentityScope();
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public LibraryDao getLibraryDao() {
        return libraryDao;
    }

    public OperationLogDao getOperationLogDao() {
        return operationLogDao;
    }

    public OrderDetailDao getOrderDetailDao() {
        return orderDetailDao;
    }

    public ProductsDao getProductsDao() {
        return productsDao;
    }

    public ProductsCategoryDao getProductsCategoryDao() {
        return productsCategoryDao;
    }

    public PurchaseDetailDao getPurchaseDetailDao() {
        return purchaseDetailDao;
    }

    public PurchaseSubtotalDao getPurchaseSubtotalDao() {
        return purchaseSubtotalDao;
    }

    public SupplierDao getSupplierDao() {
        return supplierDao;
    }

}
